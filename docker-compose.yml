version: "3"

services:
  db:
    container_name: dog_adoption_db
    image: postgres
    volumes:
      - dog_adoption_data_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - backend_network


  backend:
    container_name: dog_adoption_back
    env_file: ./backend/dog_adoption/.env
    build:
      context: ./backend/dog_adoption
      dockerfile: Dockerfile
    volumes:
      - ./backend/dog_adoption:/dog_adoption/
      - dog_adoption_data_volume:/dog_adoption/staticfiles
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
      - DJANGO_SETTINGS_MODULE=dog_adoption.settings_dev
    command: gunicorn --bind :8000 dog_adoption.wsgi:application
    networks:
      - backend_network
    depends_on:
      - db


  backend-nginx:
    container_name: dog_adoption_back_nginx
    build:
      context: ./backend/nginx/.
      dockerfile: Dockerfile.dev
    ports:
      - "8080:80"
    volumes:
      - dog_adoption_data_volume:/dog_adoption/staticfiles
    depends_on:
      - backend
    networks:
      - backend_network


  frontend:
    container_name: dog_adoption_front
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/frontend
    command: sh -c "cd dog_adoption && yarn start"
    ports:
      - 3000:3000
    networks:
      - frontend_network
    depends_on:
      - backend


  frontend_nginx:
    container_name: dog_adoption_front_nginx
    build:
      context: ./frontend/nginx/.
      dockerfile: Dockerfile.dev
    ports:
      - "80:80"
    depends_on:
      - frontend
    networks:
      - frontend_network


networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge


volumes:
  dog_adoption_data_volume:
